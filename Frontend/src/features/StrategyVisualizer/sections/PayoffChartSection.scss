// src/features/StrategyVisualizer/sections/PayoffChartSection.scss
@use '../../../index.scss' as *; // Assuming $font-family, $background-white, $border-color, etc. are defined here

.sv-payoff-chart-section {
  font-family: $font-family;
  margin-top: 15px; // Space from NewStrategySection

  .chart-section-tabs {
    // Styles for StrategyTabs component if needed
    // e.g., margin-bottom: 10px;
  }

  .tab-content-area {
    padding-top: 15px;
    min-height: 300px; // Ensure content area has some height
  }

  // Styles for the content within the "Payoff Graph & Table" main tab
  .payoff-graph-main-tab-content { // Wrapper for sub-tabs and their content
    .section-header-controls.payoff-sub-tabs-container { // For sub-tabs and their controls
      display: flex;
      flex-wrap: wrap; // Allow controls to wrap on smaller screens
      align-items: center;
      gap: 15px; // Space between sub-tabs and control groups
      margin-bottom: 15px; // Space before the chart/table content

      .payoff-sub-tabs { // Styles for the sub-tabs component itself
        // Add specific styles if needed, e.g., flex-grow: 1; to take more space
      }

      .table-controls.payoff-matrix-table-controls {
        display: flex;
        align-items: center;
        gap: 10px;
        label { margin-right: 5px; font-size: 13px;}
        .table-interval-select { /* Styles for the Select component */ }
        .show-percentage-checkbox { /* Styles for the Checkbox component */ }
      }

      .chart-specific-controls {
        display: flex;
        align-items: center;
        gap: 10px;
        // e.g. .reset-zoom-btn { /* styles */ }
      }
      
      // This was .chart-display-options in your original paste.txt
      // Renaming to .additional-display-options for clarity if it's general
      .additional-display-options {
        display: flex;
        gap: 10px;
        margin-left: auto; // Push to the right if desired
        .sd-select, .oi-select { /* Styles for these Select components */ }
      }
    }
  }
  
  // Styles for the "Payoff Chart" sub-tab content
  .payoff-graph-content { 
    .chart-display-area {
      position: relative; // For absolute positioning of projected P&L label if needed
      background-color: $background-white;
      border: 1px solid $border-color;
      border-radius: 2px; // Use a variable if you have one
      padding: 15px; // Consistent padding
      min-height: 380px; // Slightly increased for comfortable viewing with legend/title
      width: 100%;     // Ensure the container takes full available width
      box-sizing: border-box; // Important for padding and border not to add to width

      canvas {
        display: block; // Removes extra space below canvas
        width: 100%;    // Fill the container width
        height: 100%;   // Fill the container height
                        // Removed !important. Chart.js responsive options should handle this.
                        // If Chart.js sets explicit pixel width/height attributes on the canvas,
                        // CSS height:100% might be overridden or behave unexpectedly.
                        // The min-height on parent (.chart-display-area) is key.
                        // Chart.js responsive mode usually adapts to parent's size.
      }

      .projected-pnl-label { // Assuming this is positioned over the chart
        position: absolute;
        top: 10px; 
        left: 15px; // Or right: 15px;
        background-color: rgba(255, 255, 255, 0.8);
        padding: 3px 7px;
        border-radius: 1px;
        font-size: 12px;
        font-weight: 500;
        z-index: 10; // Ensure it's above the canvas
      }

      .chart-loading-placeholder {
        // Copied from your previous SCSS, seems fine
        display: flex;
        align-items: center;
        justify-content: center;
        position: absolute; // To overlay on the canvas area
        top: 0; left: 0; right: 0; bottom: 0;
        color: $text-light;
        font-style: italic;
        background-color: rgba(255, 255, 255, 0.5); // Optional: slight overlay
        border-radius: 2px; // Match parent
      }
    }
  }

  // Styles for PayoffTable component (P&L Matrix sub-tab)
  .payoff-table-container { // Assuming your PayoffTable component uses this class
    margin-top: 10px; // Space if needed
    table {
      width: 100%;
      border-collapse: collapse;
      font-size: 13px;
      th, td {
        border: 1px solid $border-color;
        padding: 8px;
        text-align: right;
      }
      th {
        background-color: lighten($background-light, 3%);
        font-weight: 500;
        text-align: center;
      }
      td:first-child { // Target Price column
        text-align: center;
        font-weight: 500;
      }
      .highlighted-row td { // For current target P&L row
        background-color: lighten($primary-color, 40%);
        font-weight: bold;
      }
    }
    .current-target-summary {
        margin-top: 10px;
        font-size: 13px;
        padding: 5px;
        background-color: lighten($background-light, 2%);
        border-radius: 1px;
    }
  }


  .greeks-tab-content {
    padding: 10px 0;
    .controls-header { // Consistent class name for P&L Scenario and Greeks
      display: flex;
      gap: 20px;
      margin-bottom: 15px;
      padding: 0 5px; 
      .greeks-multiplier-checkbox, // Assuming you might want to reuse or be specific
      .pnl-multiplier-checkbox {  // If P&L Scenario controls have a similar class
        label { font-size: 13px; }
      }
    }
  }
  
  .pnl-table-main-content { // For P&L Scenario tab
    .controls-header { // Using consistent class name
        display: flex;
        gap: 20px;
        margin-bottom: 15px;
        padding: 0 5px;
    }
  }

  .tab-content-placeholder { 
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 200px;
    color: $text-light;
    font-style: italic;
    border: 1px dashed $border-color;
    border-radius: 2px;
    margin-top: 10px;
  }

  .global-chart-controls {
    display: flex;
    flex-direction: column; // Stack spot and date rows
    gap: 20px; // Space between spot and date rows
    margin-top: 20px;
    padding: 15px;
    border-top: 1px solid $border-color;
    background-color: lighten($background-light, 2%);
    border-radius: 0 0 2px 2px;

    .target-controls-row {
      display: flex; // Spot group and Date group will be flex items
      align-items: flex-start; // Align items to the start of their cross axis
      gap: 20px;
      
      &.spot-controls, &.date-controls {
        flex: 1; // Allow each control group to take up equal space if desired
        // Or use specific flex-basis or width
      }

      .input-slider-group {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        gap: 8px;

        label {
          font-size: 13px;
          font-weight: 500;
          color: $text-color;
          margin-bottom: 2px;
        }

        .input-with-buttons {
          display: flex;
          align-items: center;
          gap: 5px;
          .target-value-input {
            flex-grow: 1;
            max-width: 120px;
            text-align: center;
          }
          .date-display-input { cursor: pointer; }
          .hidden-date-input { opacity: 0; width: 0; height: 0; position: absolute; z-index: -1; }
        }
        
        .global-target-slider {
          width: 100%;
          accent-color: $primary-color;
          // Slider track/thumb styles (your existing ones are fine)
            &::-webkit-slider-runnable-track { width: 100%; height: 5px; cursor: pointer; background: lighten($border-color, 5%); border-radius: 3px; }
            &::-moz-range-track { width: 100%; height: 5px; cursor: pointer; background: lighten($border-color, 5%); border-radius: 3px; }
            &::-webkit-slider-thumb { -webkit-appearance: none; appearance: none; margin-top: -4.5px; background: $primary-color; height: 14px; width: 14px; border-radius: 50%; cursor: pointer; border: 2px solid $background-white; box-shadow: 0 0 3px rgba(0,0,0,0.2); }
            &::-moz-range-thumb { background: $primary-color; height: 14px; width: 14px; border-radius: 50%; cursor: pointer; border: 2px solid $background-white; box-shadow: 0 0 3px rgba(0,0,0,0.2); }
        }
      }
    }
    .date-slider-labels { // This should be inside the .date-controls .input-slider-group or styled carefully
        display: flex;
        justify-content: space-between;
        font-size: 11px;
        color: $text-light;
        padding: 0 5px;
        margin-top: -5px; // Adjust if it's after the slider directly
    }
  }
}
